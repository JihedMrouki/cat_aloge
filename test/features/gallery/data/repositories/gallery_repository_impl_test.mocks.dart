// Mocks generated by Mockito 5.4.4 from annotations
// in cat_aloge/test/features/gallery/data/repositories/gallery_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:cat_aloge/features/gallery/data/datasources/device_photo_datasource.dart'
    as _i2;
import 'package:cat_aloge/features/gallery/domain/entities/cat_photo.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DevicePhotoDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDevicePhotoDataSource extends _i1.Mock
    implements _i2.DevicePhotoDataSource {
  MockDevicePhotoDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> refreshPhotos() => (super.noSuchMethod(
        Invocation.method(
          #refreshPhotos,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearCache() => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<List<_i4.CatPhoto>> getCatPhotos() => (super.noSuchMethod(
        Invocation.method(
          #getCatPhotos,
          [],
        ),
        returnValue: _i3.Future<List<_i4.CatPhoto>>.value(<_i4.CatPhoto>[]),
      ) as _i3.Future<List<_i4.CatPhoto>>);
}
